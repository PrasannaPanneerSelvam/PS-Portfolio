<div class="hamburgerButtonHolder">
  <div class="hamburgerButton" id="hamburgerButton"></div>
</div>

<script>
  import { isHamburgerOn } from "./../store/Context";

  const hamburgerButton = document.getElementById("hamburgerButton");
  hamburgerButton.addEventListener("click", function () {
    isHamburgerOn.set(!isHamburgerOn.get());
  });

  isHamburgerOn.subscribe((value) => {
    if (value) {
      hamburgerButton.classList.add("criss-cross");
    } else {
      hamburgerButton.classList.remove("criss-cross");
    }
  });
</script>

<style is:global>
  .hamburgerButtonHolder {
    --hamburger-line-height: 3px;
    --hamburger-line-width: 30px;

    display: flex;
    /* display: none; */
    align-items: center;
    justify-content: center;

    box-sizing: content-box;
    height: calc(8 * var(--hamburger-line-height));
    padding: 1vh;

    position: absolute;
    top: 1vh;
    right: 1vh;

    /* z-index: var(--hamburger-level); */
    z-index: 9999;
  }

  .hamburgerButton {
    display: inline-block;
    position: relative;
    height: var(--hamburger-line-height);
    width: var(--hamburger-line-width);
    background-color: var(--icon-stroke-color);
    border-radius: 10px;
    transition: all 0.2s ease-out;
  }
  .hamburgerButton::before,
  .hamburgerButton::after {
    content: "";
    display: inherit;
    position: absolute;
    background-color: var(--icon-stroke-color);
    height: inherit;
    width: inherit;
    border-radius: inherit;
    top: 7px;
    transition: all 0.2s ease-out;
  }
  .hamburgerButton::after {
    top: -7px;
  }
  .hamburgerButton.criss-cross {
    background-color: transparent;
  }
  .hamburgerButton.criss-cross::before {
    top: 0;
    transform: rotate(-45deg);
  }
  .hamburgerButton.criss-cross::after {
    top: 0;
    transform: rotate(45deg);
  }

  @media (min-width: 769px) {
    .hamburgerButtonHolder {
      display: none;
    }
  }
</style>
