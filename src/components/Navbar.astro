---
import Hamburger from "./Hamburger.astro";

interface Props {
  sections: string[];
}

const { sections } = Astro.props;
---

<header class="primaryHeader">
  <div class="nav-logo"></div>
  <Hamburger />
  <nav id="navbar-overlay">
    <div class="overlay"></div>
    <ul class="primaryNavBar">
      {
        sections.map((sectionName) => (
          <li class="primaryNavItem navlink">
            <a href={`#${sectionName.toLowerCase()}`}>{sectionName}</a>
          </li>
        ))
      }
      <div class="slider"></div>
      <li class="primaryNavItem auxilaryNavItem">
        <a
          class="auxilaryButton"
          href="/resume.pdf"
          target="_blank"
          rel="noopener noreferrer"
        >
          Resume
        </a>
      </li>
    </ul>
  </nav>
</header>

<script>
  import { currentPageIndex } from "../store/Context";
  import { addClassName, removeClassName, toggleClassName } from "./className";

  const navbarOverlay = document.getElementById("navbar-overlay"),
    navAnchorNodes = [...document.querySelectorAll(".navlink a")],
    navbarSlider = document.getElementsByClassName("slider")[0];

  const hamburgerButton = document.getElementById("hamburgerButton");

  const toggleSideNavBarForMWeb = function () {
    toggleClassName(navbarOverlay, "navbar-overlay");
  };

  const closeHamburgerAndHideSideNavBar = function () {
    hamburgerButton.checked ^= 1;
    toggleSideNavBarForMWeb();
  };

  navbarOverlay.children[0].addEventListener(
    "click",
    closeHamburgerAndHideSideNavBar
  );

  hamburgerButton.addEventListener("click", toggleSideNavBarForMWeb);

  navAnchorNodes.forEach(function (atag, idx) {
    atag.addEventListener("click", function () {
      closeHamburgerAndHideSideNavBar();
      currentPageIndex.set(idx);
    });
  });

  currentPageIndex.subscribe((value) => {
    navAnchorNodes.forEach(function (_, idx) {
      idx === value
        ? addClassName(navAnchorNodes[idx], "activeNavItem")
        : removeClassName(navAnchorNodes[idx], "activeNavItem");
    });
    navbarSlider.style.setProperty("--slider-left", value * 100 + "%");
  });
</script>

<style is:global>
  .primaryHeader {
    position: fixed;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    user-select: none;
    z-index: 9999;
  }

  .nav-logo {
    display: inline-block;
    height: 50px;
    aspect-ratio: 1 / 1;
    /* background-color: #eee; */
    margin: 2rem;
  }

  .primaryNavBar {
    margin-right: 2rem;
    display: flex;
    list-style: none;
    position: relative;
  }

  .primaryNavBar:before {
    position: absolute;
    content: "";
    left: 50%;
    top: 50%;
    height: 200%;
    width: 120%;
    transform: translate(-50%, -50%);
    background-color: rgba(8, 5, 27, 0.95);

    /* border-radius: 1rem; */
  }

  @supports (backdrop-filter: blur(2rem)) {
    .primaryNavBar:before {
      background-color: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(2rem);
    }
  }

  .primaryNavItem {
    display: flex;
    align-items: center;
    justify-content: center;

    cursor: pointer;
    text-align: center;

    width: 7rem;
    /* overflow: hidden; */
    z-index: 1002;
  }

  .primaryNavItem a {
    position: relative;
    text-decoration: none;
    color: #fff;
  }

  .primaryNavItem a:hover {
    translate: 0 -5%;
  }

  .auxilaryButton {
    height: 100%;
    padding: 0.25rem 0.7rem !important;
    margin-left: 1.25rem;
    color: var(--primary-text-color);
    border: 1px solid var(--button-outline-color);
    border-radius: var(--border-radius);
    background: transparent;
    cursor: pointer;
    color: #fff;
    border-color: #fff;
    text-decoration: none;
  }

  /* .auxilaryButton:hover {
  box-shadow: 1px 1px 0 0 #fff;
  transform: translate(-2px, -2px);
} */

  .slider {
    --slider-left: 0%;
    position: absolute;
    bottom: -0.125rem;
    height: 0.25rem;
    /* height: 100%; */

    width: 7rem;

    background: transparent;
    border: 2px solid #64ffda;

    border-radius: 1rem;

    transform: translate(var(--slider-left, 0%));
    transition: all 250ms linear;

    z-index: 1001;

    cursor: pointer;

    left: 0;
  }

  @media (min-width: 769px) {
    .primaryNavItem a {
      display: flex;
      height: 100%;
      width: 100%;
      justify-content: center;
      align-items: center;
    }
  }
  @media (max-width: 768px) {
    .slider {
      display: none;
    }

    .navbar-overlay {
      position: fixed;
      top: 0;
      display: inline-block;
      height: 100vh;
      width: 100vw;
      background-color: rgb(8, 5, 27, 0.8);
    }

    .auxilaryNavItem {
      padding: 1.25rem;
    }

    .primaryNavBar {
      z-index: 1000;
      position: fixed;
      left: 30%;
      right: 0;
      top: 0;
      bottom: 0;

      flex-direction: column;
      gap: 2rem;

      padding: min(30vh, 10rem) 2rem;
      background-color: rgba(8, 5, 27, 0.97);

      transform: translate(100%);
      transition: transform 300ms ease-out;

      /* height: min-content; */
      justify-content: center;
      align-items: center;
      margin: 0;
    }

    .navbar-overlay > .overlay {
      display: inline-block;
      z-index: 999;
      position: fixed;

      height: 100%;
      width: 30%;
      left: 0;
      top: 0;
    }

    @supports (backdrop-filter: blur(1rem)) {
      .primaryNavBar {
        background-color: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(1rem);
      }
    }

    .primaryNavBar:before {
      content: unset;
    }

    .navbar-overlay > .primaryNavBar {
      transform: translate(0%);
    }

    .activeNavItem:after {
      content: "";
      position: absolute;
      left: 0;
      bottom: -0.125rem;

      width: 100%;
      height: 0.25rem;

      background: #fff;
      border-radius: 1rem;
    }

    .auxilaryButton {
      width: unset;
      margin-left: 0px;
    }
  }
</style>
