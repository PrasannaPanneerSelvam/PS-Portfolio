<section class="section" id="home">
  <div>
    <div>
      <h2 class="hiText">Hi, I'm</h2>
      <h1 class="heroText" id="heroText">Prasanna</h1>

      <h2 style={{ display: 'block' }} class="slider introText" id="introText">
        {/* Coding the future, pixel by pixel */}
         Designing the Future with Code and Elegance
        {/* Front end developer, I build things to make web cleaner */}
      </h2>
    </div>
  </div>
</section>

<script>
  import { getNewRandomText, getRandomText } from './randomUtils';
  import { isHeroAnimPending } from './../store/Context';

  const heroTextNode = document.getElementById('heroText'),
    introTextNode = document.getElementById('introText');

  introTextNode.addEventListener('animationend', function () {
    isHeroAnimPending.set(false);
  });

  const finalText = 'Prasanna';

  const options = {
    changeOneLetterAtOnce: true,
    timing: 30,
    doMaxSwaps: false,
    maxSwaps: 3,
  };

  let text = getRandomText(finalText),
    currentIndex = 0,
    swapCount = 0;

  const incrementCurrentIndexWrapper = function () {
    currentIndex++;
    swapCount = 0;
  };

  function loop() {
    const { timing, doMaxSwaps, maxSwaps, changeOneLetterAtOnce } = options;

    if (text === finalText || currentIndex === text.length) {
      introTextNode.classList.add('show');
      return;
    }

    if (finalText[currentIndex] === ' ') {
      incrementCurrentIndexWrapper();
      return;
    }

    const newText = getNewRandomText({
      currentText: text,
      expectedText: finalText,
      currentIndex,
      currentSwapCount: swapCount,
      doMaxSwaps,
      maxSwaps,
      changeOneLetterAtOnce,
    });

    if (newText[currentIndex] === finalText[currentIndex]) {
      incrementCurrentIndexWrapper();
    } else {
      swapCount++;
    }

    text = newText;
    heroTextNode.textContent = text;

    setTimeout(loop, timing);
  }

  loop();
</script>

<style>
  .section {
    display: grid;
    place-items: center;
    scroll-snap-align: start;
    padding: 4rem;
  }

  .hiText {
    font-size: 1.375rem;
    line-height: 2rem;
    margin-bottom: 0.5rem;
    user-select: none;
  }

  .heroText {
    font-size: 3rem;
    line-height: 3.25rem;
    font-family: 'Space Mono', monospace;
    cursor: default;
    color: #64ffda;
  }

  .introText {
    font-size: 1.375rem;
    line-height: 2rem;
    position: relative;
    margin-top: 1rem;

    opacity: 0;
    transform: translate(0%, -100%);

    transition: all 300ms ease-in-out;
    user-select: none;
  }

  .slider {
    display: inline-block;
  }

  .slider::after {
    content: '';
    position: absolute;
    display: inline-block;
    width: 100%;
    height: 100%;
    /* height: 200%; */
    left: 0;
    top: 0;
    /* top: -20%; */
    background: var(--primary-color);
    transform-origin: right center;
  }

  .show {
    opacity: 1;
    transform: translate(0%);
    z-index: -1;
  }

  .show::after {
    animation: move var(--animationDuration, 300ms)
      var(--animationTimingFunction, ease-in-out) forwards;
  }

  @keyframes move {
    100% {
      transform: scale(0, 1);
    }
  }
</style>
